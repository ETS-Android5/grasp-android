* 06.02.2022

interfejs do budowania struktury pomocniczej 
przypisujacej wspolrzednym ekranowym kursory
z oryginalnego wyrazenia:

- dodaj element (szerokosc, wspolrzedna kursora)
- zakoncz biezaca linie (wysokosc)

Zalozenia implementacyjne:
- kolejne przerysowywanie takiego samego dokumentu
nie powinno powodowac dodatkowych alokacji

- lokalne zmmiany nie powinny inwalidowac zbyt wielu
elementow (a w kazdym razie powinny maksymalizowac
uzywanie zaalokowanych zasobow)

(define-interface CursorMap ()
  (finish-line!)::void
  (add-entry! width::real cursor::Cursor)::void

  (cursor-at left::real top::real)::Cursor
  (position cursor::Cursor)::Point)


* 05.02.2022

(cursor-ref document::Indexable cursor::Cursor) -> element
(screen:cursor-at left::real top::real) -> Cursor
(screen:position cursor::Cursor) -> Point
(screen:extent cursor::Cursor) -> Extent

Teraz pomysł jest taki, żeby wynikiem renderowania byla
struktura podobna do tej ze starego prototypu, tzn.
lista linii zawierajaca liste elementow, gdzie kazdy
z elementow albo jest finalnym elementem, albo
kontenerem zawierajacym liste

* 04.02.2022

wczoraj i przedwczoraj zajmowalem sie glownie analizatorem
zaleznosci i refaktoryzacja modulow, majaca na celu znalezienie
odpowiedniego miejsca do przechowywania spacji.

Nowy typ "spacji" zostal juz co prawda zdefiniowany, ale jeszcze
nie jest uzywany, i wymaga sporo dopracowania.

Czyli plan wyglada na razie tak: wyodrebniamy typ spacji,
okreslamy reguly indeksowania i zastepujemy aktualna reprezentacje
spacji w parserze, funkcji wyswietlajacej oraz funkcji rysujacej

Nastepnie chcielibysmy stworzyc odwzorowania dla elementow
przestrzennych w ich polozenie i rozmiary

* 02.02.2022 

wczoraj narodzil sie taki pomysl, zeby utrzymywac mape
z polozeniami tylko dla nieparzystych indeksow

ogolnie wydaje sie tez, ze niezbedne bedzie wydzielenie
spacji jako osobnego typu, przy czym moze byc tak, ze
bedziemy owe spacje reprezentowac po prostu jako listy
liczb calkowitych, gdzie liczba oznacza spacje, zas
przejscie do nastepnego elementu oznacza nowa linie.


* 01.02.2022 
podczas rysowania chcemy tworzyc pomocnicza
strukture, ktora po pierwsze bedzie nam odwzorowywac
obszary ekranu w kursory widgetow, a po drugie bedzie
umozliwiac odwzorowywanie kursorow w polozenia widgetow


Wezmy takie cos:

#+BEGIN_SRC
/        /             \              \
| define | factorial n |              |
|        \             /              |
|   /    /        \                 \ |
|   | if | <= n 0 |                 | |
|   |    \        /                 | |
|   |                               | |
|   |       1                       | |
|   |                               | |
|   |       /     /   /       \ \ \ | |
|   |       | * n | ! | - n 1 | | | | |
\   \       \     \   \       / / / / /
#+END_SRC


odpowiadajaca temu struktura moglaby wygladac z grubsza
tak:

#+BEGIN_SRC
 _____________________________________
# |    | # |       | # #              #
# |    | # |       | # #              #
#_|____|_#_|_______|_#_#______________#
#   # || # || # # #                 # #
#   # || # || # # #                 # #
#   #_||_#_||_#_#_#_________________#_#
#   #       #                       # #
#   #       #                       # #
#   #_______#_______________________#_#
#   #       # # # # # # # # # # # # # #
#   #       # # # # # # # # # # # # # #
#___#_______#_#_#_#_#_#_#_#_#_#_#_#_#_#
#+END_SRC

albo, jesli ja dwukrotnie powiekszymy:

#+BEGIN_SRC
  __________________________________________________________________________
||   |        |   ||   |              |   ||  ||                            ||
||   |        |   ||   |              |   ||  ||                            ||
||   |        |   ||   |              |   ||  ||                            ||
||   |        |   ||   |              |   ||  ||                            ||
||   |        |   ||   |              |   ||  ||                            ||
||___|________|___||___|______________|___||__||____________________________||
||      ||  |  |  ||  |  |  ||  ||  ||                                  ||  ||
||      ||  |  |  ||  |  |  ||  ||  ||                                  ||  ||
||      ||  |  |  ||  |  |  ||  ||  ||                                  ||  ||
||      ||  |  |  ||  |  |  ||  ||  ||                                  ||  ||
||      ||  |  |  ||  |  |  ||  ||  ||                                  ||  ||
||      ||__|__|__||__|__|__||__||__||__________________________________||__||
||      ||              ||                                              ||  ||
||      ||              ||                                              ||  ||
||      ||              ||                                              ||  ||
||      ||              ||                                              ||  ||
||      ||              ||                                              ||  ||
||      ||______________||______________________________________________||__||
||      ||              ||  ||  ||  ||  ||  ||  ||  ||  ||  ||  ||  ||  ||  ||
||      ||              ||  ||  ||  ||  ||  ||  ||  ||  ||  ||  ||  ||  ||  ||
||      ||              ||  ||  ||  ||  ||  ||  ||  ||  ||  ||  ||  ||  ||  ||
||      ||              ||  ||  ||  ||  ||  ||  ||  ||  ||  ||  ||  ||  ||  ||
||      ||              ||  ||  ||  ||  ||  ||  ||  ||  ||  ||  ||  ||  ||  ||
||______||______________||__||__||__||__||__||__||__||__||__||__||__||__||__||
#+END_SRC

A jesli dodatkowo uzupelnimy wspolrzednymi kursorow, to dostaniemy takie cos:

#+BEGIN_SRC
0
  __________________________________________________________________________
(|0  |1 define|2  (|0  |1 factorial   |2  3n4 )|*                           ||
1|1  |1       |1  3|3  |3             |3  3|3 3|4                           ||
||   |        |   1|1  |1             |1  1|1 1|1                           ||
||   |        |   ||   |              |   ||  ||                            ||
||   |        |   ||   |              |   ||  ||                            ||
||___|________|___||___|______________|___||__||____________________________||
||*     (|0 |1 |2 (|0 |1 |2 3|4 5|6 )|*                                 ||  ||
||4     5|5 |5 |5 3|3 |3 |3 3|3 3|3 3|4                                 ||  ||
||1     1|1 |1 |1 5|5 |5 |5 5|5 5|5 5|5                                 ||  ||
||      ||  |if|  1|1 |1 |1 1|1 1|1 1|1                                 ||  ||
||      ||  |  |  ||  |<=|  n|  ||  ||                                  ||  ||
||      ||__|__|__||__|__|__||__||__||__________________________________||__||
||      ||*             5|*                                             ||  ||
||      ||4             5|6                                             ||  ||
||      ||5             1|5                                             ||  ||
||      ||1             ||1                                             ||  ||
||      ||              1|                                              ||  ||
||      ||______________||______________________________________________||__||
||      ||*             (|0 1|2 3|4 (|0 1!2 (|0 1-2 3n4 516 )|4 )|6 )|8 )|6 )|
||      ||6             7|7 7|7 7|7 5|5 5|5 3|3 3|3 3|3 3|3 3|5 5|7 7|5 5|1 1|
||      ||5             5|5 5|5 5|5 7|7 7|7 5|5 5|5 5|5 5|5 5|7 7|5 5|1 1|  ||
||      ||1             1|1 1|1 1|1 5|5 5|5 7|7 7|7 7|7 7|7 7|5 5|1 1|  ||  ||
||      ||              ||  *|  n|  1|1 1|1 5|5 5|5 5|5 5|5 5|1 1|  ||  ||  ||
||______||______________||__||__||__||__||__1|1_1|1_1|1_1|1_1|__||__||__||__||

2
#+END_SRC

(1) (1 1)define (3 1) (1 3 1)factorial (3 3 1)n (5 1) (1 5 1)if (3 5 1)
(1 3 5 1)<= (3 3 5 1)n (5 3 5 1)1 (7 5 1) (1 7 5 1)* (3 7 5 1)n

No i super. I teraz chcielibysmy to sobie reprezentowac za pomoca jakiejs
struktury danych.

Wyobrażam sobie coś takiego:

(define-alias Cursor/Line java.lang.Object)

(define-type (Line height: real
                   contents: Span
                   next: Line))

(define-type (Span width: real
                   target: Cursor/Line
                   next: Span))

No i dopsz. I teraz mamy dwie misje: po pierwsze, chcemy odwzorowac
wspolrzedne ekranowe w kursor, a po drugie chcemy odwzorować kursor
w obszar na ekranie.

Wezmy sobie definicje:
#+BEGIN_SRC
(define (factorial n)
	 (if (= n 0)
	     1
	     (* n (factorial (- n 1)))))
#+END_SRC
Sklada sie z 20 komorek ("cons") oraz 21 "lisci", w sumie
41 elementow. Nie uwzgledniajac pozycji na bialych znakach
ani na symbolach, mozemy naliczyc 55 kursorow odnoszacych
sie do tego wyrazenia.

To chyba nie jest jakas szczegolna eksplozja kombinatoryczna;
raczej przyrost liniowy.

Atrakcyjnym aspektem kursora wydaje sie to, ze jest w nim
ujeta hierarchia zawierania: ze relacja (potomek | przodkowie)
zawsze ujmuje potomka wzgledem przodkow.

Jednakze nie mozemy niestety zakladac, ze hierarchi "rodzicielstwa"
odpowiadaja zawierajace sie prostokaty, poniewaz tak z cala pewnoscia
nie jest w przypadku bialych znakow zawierajacych znak nowej
linii.

Zakladajac, ze mamy do dyspozycji strukutre taka jak ta narysowana
powyzej, mozemy sobie w liniowy sposob wyszukac pozycje danego
kursora.

Ale 


* 31.01.2022

mamy juz nawigowanie strzalkami w lewo i prawo.

i to jako tako dziala. co chcemy teraz?
- chcemy, zeby edytor wyswietlal wyrazenia za pomoca naszej
  funkcji renderujacej
- i zeby mozna sie bylo poruszac strzalkami po tych wyrazeniach
- i zeby mozna bylo uzywac klikniecia myszy do umiejscowienia
  kursora w odpowiednim miejscu

a w dalszej kolejnosci:

- zaznaczanie wyrazen
- drag&drop (lewy nawias) oraz zmiany rozmiaru (prawy nawias)
- poruszanie sie strzalkami po liniach

No dobra. To co sie musi tak naprawde dziac?

* starsze

Duzo decyzji projektowych przed nami!

oto ficzery, ktore miec chcemy:
- nawigowanie strzalkami kursora po wyrazeniach
- zaznaczanie wyrazen (shift + szczalka)
- wiele paneli (podzial pionowy i poziomy)
- wycinanie (ctrl+x), kopiowanie (ctrl+c) i wklejanie (ctrl+v)
- sledzenie historii, 'undo' (ctrl+z)

No dopsz. To teraz jak to reprezentowac?


#+BEGIN_SRC
(define-interface Panel ()
  ...)

(define-type (Split first: Panel
                    second: Panel
		    first%: real)
  implementing Panel
  with
  ...)

(define-type (Editor document: Document
                     cursor: Cursor
		     selection-start: Cursor
		     screen: Screen)
  implementing Panel
  with
  ...)

#+END_SRC

